---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: peloton-to-garmin-it
  namespace: home-automation
spec:
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  interval: 30m
  maxHistory: 2
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    image:
      repository: ghcr.io/philosowaffle/peloton-to-garmin
      pullPolicy: IfNotPresent
      tag: v3.6.0

    strategy:
      type: Recreate

    envFrom:
      - secretRef:
          name: peloton-to-garmin-it-secrets

    env:
      - name: TZ
        value: America/Los_Angeles
      - name: P2G_APP__POLLINGINTERVALSECONDS
        value: 7200
      - name: P2G_APP__CHECKFORUPDATES
        value: false
      - name: P2G_PELOTON__NUMWORKOUTSTODOWNLOAD
        value: 8
      - name: P2G_GARMIN__UPLOAD
        value: true
        #https://philosowaffle.github.io/peloton-to-garmin/configuration/json.html#upload-strategies
      - name: P2G_GARMIN__UPLOADSTRATEGY
        value: 2
      - name: P2G_OBSERVABILITY__PROMETHEUS__ENABLED
        value: true
      - name: P2G_OBSERVABILITY__PROMETHEUS__PORT
        value: 4000

      - name: P2G_PELOTON__EMAIL
        valueFrom:
          secretKeyRef:
            name: peloton-to-garmin-it-secrets
            key: P2G_PELOTON__EMAIL

      - name: P2G_PELOTON__PASSWORD
        valueFrom:
          secretKeyRef:
            name: peloton-to-garmin-it-secrets
            key: P2G_PELOTON__PASSWORD

      - name: P2G_GARMIN__EMAIL
        valueFrom:
          secretKeyRef:
            name: peloton-to-garmin-it-secrets
            key: P2G_GARMIN__EMAIL

      - name: P2G_GARMIN__PASSWORD
        valueFrom:
          secretKeyRef:
            name: peloton-to-garmin-it-secrets
            key: P2G_GARMIN__PASSWORD

    service:
      main:
        ports:
          http:
            port: 80

    probes:
      startup:
        enabled: false
      liveness:
        enabled: false
      readiness:
        enabled: false
    # ingress:
    #   main:
    #     enabled: true
    #     ingressClassName: nginx
    #     annotations:
    #       external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
    #     hosts:
    #       - host: &host "bookstack.${SECRET_DOMAIN}"
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #     tls:
    #       - hosts:
    #           - *host

    persistence:
      config:
        enabled: true
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: cephfs
